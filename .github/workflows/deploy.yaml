name: Deploy to Kubernetes

on:
  # This listens for the 'Build & Push Docker Images' workflow to successfully complete.
  workflow_run:
    workflows: ["Build & Push Docker Images"]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    # Only proceed if the preceding build workflow succeeded
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # --- 1. Get the Image Tag (Commit SHA) ---
      - name: Set Image Tag Environment Variable
        run: |
          # The image tag is the commit SHA from the original push event that triggered the build.
          echo "IMAGE_TAG=${{ github.event.workflow_run.head_sha }}" >> $GITHUB_ENV

      # --- 2. Configure Kubectl and Authentication ---
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.33.0'

      - name: Set Kubernetes Context (Authenticate to Cluster)
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          # Reads the Kubeconfig YAML from your GitHub Secret
          kubeconfig: ${{ secrets.KUBE_CONFIG }} 
          context: github-context # Context name defined in your Kubeconfig YAML

      # --- 3. Update Manifests using SED Loop (Efficient Tag Replacement) ---
      - name: Update images in manifest
        run: |
          # Load necessary variables
          DOCKERHUB_USER=${{ secrets.DOCKERHUB_USERNAME }}
          IMAGE_TAG=${{ env.IMAGE_TAG }}
          MANIFEST_FILE=./release/kubernetes-manifests.yaml
          
          # List of all services to update
          SERVICES="adservice cartservice checkoutservice currencyservice emailservice frontend loadgenerator paymentservice productcatalogservice recommendationservice shippingservice shoppingassistantservice"
          
          echo "Updating image tags in $MANIFEST_FILE with tag $IMAGE_TAG..."
          
          # Iterate through the services and use sed to replace the image line.
          for service in $SERVICES; do
            # The sed command finds the image line for the specific service and replaces any existing tag (.*)
            # with the new, fully qualified image path and tag.
            sed -i "s|image: .*$service.*|image: $DOCKERHUB_USER/uche-repository/$service:$IMAGE_TAG|g" "$MANIFEST_FILE"
            echo "   -> Updated $service"
          done

      # --- 4. Deploy to Kubernetes ---
      - name: Deploy to Kubernetes
        run: |
          # Apply the single manifest file.
          kubectl apply -f ./release/kubernetes-manifests.yaml --namespace ci-deploy

